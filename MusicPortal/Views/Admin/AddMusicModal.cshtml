@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Mvc.Localization
@using System.Globalization
@inject IViewLocalizer Localizer
@{
    var genres = ViewBag.Genres as IEnumerable<MusicPortal.Models.DataBase.Genre>;
}
<div class="modal fade" id="addMusicModal" tabindex="-1" role="dialog" aria-labelledby="addMusicModalLabel" aria-hidden="true">
    <div class="modal-dialog centermodal" role="document">
        <div class="modal-content addform">
            <div class="modal-header">
                <h5 class="modal-title" id="addMusicModalLabel">@Localizer["Add Music"]</h5>
                <button type="button" class="close custom-close-btn" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Html.BeginForm("AddMusic", "Admin", FormMethod.Post, new { enctype = "multipart/form-data", id = "addMusicForm" }))
            {
                <div class="modal-body">
                    <div class="form-group">
                        <label for="musicTitle">@Localizer["Title"]</label>
                        <input type="text" class="form-control ppp" id="musicTitle" name="Title" required />
                    </div><br>
                    <div class="form-group">
                        <label for="musicArtist">@Localizer["Artist"]</label>
                        <input type="text" class="form-control ppp" id="musicArtist" name="Artist" required />
                    </div><br>
                    <div class="form-group">
                        <label for="musicGenre">@Localizer["Genre"]</label>
                        <select class="form-control ppp" id="musicGenre" name="GenreId" required>
                            @foreach (var genre in genres)
                            {
                                <option value="@genre.Id">@genre.Name</option>
                            }
                        </select>
                    </div><br><br>
                    <div class="form-group">
                        <label for="musicFile">@Localizer["File"]</label>
                        <input type="file" class="form-control-file d-none" id="musicFile" name="MusicFile" required onchange="updateFileName()" />
                        <div class="input-group">
                            <input type="text" class="form-control" id="fileName" placeholder="@Localizer["No file selected"]" readonly />
                            <div class="input-group-append">
                                <button type="button" class="btn btn-secondary" onclick="document.getElementById('musicFile').click();">
                                    @Localizer["Choose File"]
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <br>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary conf" onclick="submitAddMusicForm()">@Localizer["Add Music"]</button>
                </div>
            }
        </div>
    </div>
</div>

<script>
    function updateFileName() {
        const fileInput = document.getElementById('musicFile');
        const fileName = fileInput.files.length > 0 ? fileInput.files[0].name : '@Localizer["No file selected"]';
        document.getElementById('fileName').value = fileName;
    }
</script>