@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Mvc.Localization
@using System.Globalization
@inject IViewLocalizer Localizer
@{
    var genres = ViewBag.Genres as IEnumerable<MusicPortal.Models.DataBase.Genre>;
}

<div class="modal fade" id="editMusicModal" tabindex="-1" role="dialog" aria-labelledby="editMusicModalLabel" aria-hidden="true">
    <div class="modal-dialog centermodal" role="document">
        <div class="modal-content addform">
            <div class="modal-header">
                <h5 class="modal-title" id="editMusicModalLabel">@Localizer["Edit Music"]</h5>
                <button type="button" class="close custom-close-btn" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Html.BeginForm("EditMusic", "Admin", FormMethod.Post, new { id = "editMusicForm" }))
            {
                <input type="hidden" id="editMusicId" name="Id" />
                <div class="modal-body">
                    <div class="form-group">
                        <br>
                        <label for="editMusicTitle">@Localizer["Title"]</label>
                        <input type="text" class="form-control ppp" id="editMusicTitle" name="Title" required />
                    </div>
                    <div class="form-group">
                        <br>
                        <label for="editMusicArtist">@Localizer["Artist"]</label>
                        <input type="text" class="form-control ppp" id="editMusicArtist" name="Artist" required />
                    </div>
                    <div class="form-group">
                        <br>
                        <label for="editMusicGenre">@Localizer["Genre"]</label>
                        <select class="form-control" id="editMusicGenre" name="GenreId" required>
                            @foreach (var genre in genres)
                            {
                                <option value="@genre.Id">@genre.Name</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="musicFile">@Localizer["File"]</label>
                        <input type="file" class="form-control-file d-none" id="musicFile" name="MusicFile" required onchange="updateFileName()" />
                        <div class="input-group">
                            <input type="text" class="form-control" id="fileName" placeholder="@Localizer["No file selected"]" readonly />
                            <div class="input-group-append">
                                <button type="button" class="btn btn-secondary" onclick="document.getElementById('musicFile').click();">
                                    @Localizer["Choose File"]
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <br>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary conf" onclick="submitEditMusicForm()">@Localizer["Save Changes"]</button>
                </div>
            }
        </div>
    </div>
</div>

<script>
    function updateFileName() {
        const fileInput = document.getElementById('musicFile');
        const fileName = fileInput.files.length > 0 ? fileInput.files[0].name : '@Localizer["No file selected"]';
        document.getElementById('fileName').value = fileName;
    }
</script>