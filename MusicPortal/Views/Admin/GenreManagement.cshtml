@model IEnumerable<MusicPortal.Models.DataBase.Genre>

<div class="container mt-4">
    <h3>Genre Management</h3>
    <!-- Add Genre Button -->
    <button class="btn btn-primary mb-3" data-toggle="modal" data-target="#addGenreModal">Add Genre</button>

    <!-- Genre List -->
    <table class="table table-striped">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="genreTableBody">
            @foreach (var genre in Model)
            {
                <tr>
                    <td>@genre.Id</td>
                    <td>@genre.Name</td>
                    <td>
                        <button class="btn btn-warning btn-sm" onclick="editGenre(@genre.Id, '@genre.Name')">Edit</button>
                        <button class="btn btn-danger btn-sm" onclick="deleteGenre(@genre.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Add Genre Modal -->
<div class="modal fade" id="addGenreModal" tabindex="-1" role="dialog" aria-labelledby="addGenreModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addGenreModalLabel">Add Genre</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="addGenreForm">
                <div class="modal-body">
                    <div class="form-group">
                        <label for="genreName">Genre Name</label>
                        <input type="text" class="form-control" id="genreName" name="Name" required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Add Genre</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Genre Modal -->
<div class="modal fade" id="editGenreModal" tabindex="-1" role="dialog" aria-labelledby="editGenreModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editGenreModalLabel">Edit Genre</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="editGenreForm">
                <input type="hidden" id="editGenreId" name="Id" />
                <div class="modal-body">
                    <div class="form-group">
                        <label for="editGenreName">Genre Name</label>
                        <input type="text" class="form-control" id="editGenreName" name="Name" required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Handle Add Genre Form submission
            $('#addGenreForm').on('submit', function (e) {
                e.preventDefault();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("AddGenre", "Admin")',
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response && response.success) {
                            Swal.fire('Success', 'Genre added successfully!', 'success');
                            $('#addGenreModal').modal('hide');
                            location.reload();
                        } else {
                            Swal.fire('Error', response && response.message || 'An error occurred while adding the genre.', 'error');
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('Error:', error);
                        Swal.fire('Error', 'An error occurred while adding the genre.', 'error');
                    }
                });
            });

            // Handle Edit Genre Form submission
            $('#editGenreForm').on('submit', function (e) {
                e.preventDefault();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("EditGenre", "Admin")',
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response && response.success) {
                            Swal.fire('Success', 'Genre updated successfully!', 'success');
                            $('#editGenreModal').modal('hide');
                            location.reload();
                        } else {
                            Swal.fire('Error', response && response.message || 'An error occurred while updating the genre.', 'error');
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('Error:', error);
                        Swal.fire('Error', 'An error occurred while updating the genre.', 'error');
                    }
                });
            });

            // Populate Edit Genre Modal with data
            function editGenre(id, name) {
                $('#editGenreId').val(id);
                $('#editGenreName').val(name);
                $('#editGenreModal').modal('show');
            }

            // Delete Genre
            function deleteGenre(id) {
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("DeleteGenre", "Admin")',
                            data: { id: id },
                            success: function (response) {
                                if (response && response.success) {
                                    Swal.fire('Deleted!', 'The genre has been deleted.', 'success');
                                    location.reload();
                                } else {
                                    Swal.fire('Error', response && response.message || 'An error occurred while deleting the genre.', 'error');
                                }
                            },
                            error: function (xhr, status, error) {
                                console.error('Error:', error);
                                Swal.fire('Error', 'An error occurred while deleting the genre.', 'error');
                            }
                        });
                    }
                });
            }
        });
    </script>
}


