@model IEnumerable<MusicPortal.Models.DataBase.Music>
@{
    var genres = ViewBag.Genres as IEnumerable<MusicPortal.Models.DataBase.Genre>;
}

<div class="container mt-4">
    <h3>Music Management</h3>
    <!-- Add Music Button -->
    <button class="btn btn-primary mb-3" data-toggle="modal" data-target="#addMusicModal">Add Music</button>

    <!-- Music List -->
    <table class="table table-striped">
        <thead>
            <tr>
                <th>ID</th>
                <th>Title</th>
                <th>Artist</th>
                <th>Genre</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="musicTableBody">
            @foreach (var music in Model)
            {
                <tr>
                    <td>@music.Id</td>
                    <td>@music.Title</td>
                    <td>@music.Artist</td>
                    <td>@music.Genre?.Name</td>
                    <td>
                        <button class="btn btn-warning btn-sm" onclick="editMusic(@music.Id, '@music.Title', '@music.Artist', @music.GenreId)">Edit</button>
                        <button class="btn btn-danger btn-sm" onclick="deleteMusic(@music.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Add Music Modal -->
<div class="modal fade" id="addMusicModal" tabindex="-1" role="dialog" aria-labelledby="addMusicModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addMusicModalLabel">Add Music</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="addMusicForm" enctype="multipart/form-data">
                <div class="modal-body">
                    <div class="form-group">
                        <label for="musicTitle">Title</label>
                        <input type="text" class="form-control" id="musicTitle" name="Title" required />
                    </div>
                    <div class="form-group">
                        <label for="musicArtist">Artist</label>
                        <input type="text" class="form-control" id="musicArtist" name="Artist" required />
                    </div>
                    <div class="form-group">
                        <label for="musicGenre">Genre</label>
                        <select class="form-control" id="musicGenre" name="GenreId" required>
                            @foreach (var genre in genres)
                            {
                                <option value="@genre.Id">@genre.Name</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="musicFile">File</label>
                        <input type="file" class="form-control-file" id="musicFile" name="MusicFile" required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Add Music</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Music Modal -->
<div class="modal fade" id="editMusicModal" tabindex="-1" role="dialog" aria-labelledby="editMusicModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editMusicModalLabel">Edit Music</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="editMusicForm" enctype="multipart/form-data">
                <input type="hidden" id="editMusicId" name="Id" />
                <div class="modal-body">
                    <div class="form-group">
                        <label for="editMusicTitle">Title</label>
                        <input type="text" class="form-control" id="editMusicTitle" name="Title" required />
                    </div>
                    <div class="form-group">
                        <label for="editMusicArtist">Artist</label>
                        <input type="text" class="form-control" id="editMusicArtist" name="Artist" required />
                    </div>
                    <div class="form-group">
                        <label for="editMusicGenre">Genre</label>
                        <select class="form-control" id="editMusicGenre" name="GenreId" required>
                            @foreach (var genre in genres)
                            {
                                <option value="@genre.Id">@genre.Name</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="editMusicFile">File (optional)</label>
                        <input type="file" class="form-control-file" id="editMusicFile" name="MusicFile" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Handle Add Music Form submission
            $('#addMusicForm').on('submit', function (e) {
                e.preventDefault();
                var formData = new FormData(this);
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("AddMusic", "Admin")',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        if (response.success) {
                            Swal.fire('Success', 'Music added successfully!', 'success');
                            location.reload();
                        } else {
                            Swal.fire('Error', 'An error occurred while adding the music.', 'error');
                        }
                    }
                });
            });

            // Handle Edit Music Form submission
            $('#editMusicForm').on('submit', function (e) {
                e.preventDefault();
                var formData = new FormData(this);
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("EditMusic", "Admin")',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        if (response.success) {
                            Swal.fire('Success', 'Music updated successfully!', 'success');
                            location.reload();
                        } else {
                            Swal.fire('Error', 'An error occurred while updating the music.', 'error');
                        }
                    }
                });
            });
        });

        // Populate Edit Music Modal with data
        function editMusic(id, title, artist, genreId) {
            $('#editMusicId').val(id);
            $('#editMusicTitle').val(title);
            $('#editMusicArtist').val(artist);
            $('#editMusicGenre').val(genreId);
            $('#editMusicModal').modal('show');
        }

        // Delete Music
        function deleteMusic(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("DeleteMusic", "Admin")',
                        data: { id: id },
                        success: function (response) {
                            if (response.success) {
                                Swal.fire('Deleted!', 'The music has been deleted.', 'success');
                                location.reload();
                            } else {
                                Swal.fire('Error', 'An error occurred while deleting the music.', 'error');
                            }
                        }
                    });
                }
            });
        }
    </script>
}
